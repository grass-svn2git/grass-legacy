$Id$

NOTE: Please improve this list!

Dear (new) GRASS Developer,

When submitting SHELL SCRIPTS to GRASS CVS repositiory,
please take care of following rules:

[ see SUBMITTING for C code hints ]

1.  Use the directory structure to place your script appropriately into
    the source tree
    	- scripts go into scripts/

    Consider to take a look at [please suggest Shell tutorial]                                     

2.  Add a header section to the script you submit and make sure you include
    the copyright. The purpose section is meant to contain a general
    overview of the code in the file to assist other programmers that will
    need to make changes to your code.

    Example (ficticious header for a script called r.myscript) :

#!/bin/sh

############################################################################
#
# MODULE:       r.myscript
# AUTHOR(S):    Me <email AT some domain>
# PURPOSE:      Calculates univariate statistics from a GRASS raster map
# COPYRIGHT:    (C) 2005 by the GRASS Development Team
#
#               This program is free software under the GNU General Public
#               License (>=v2). Read the file COPYING that comes with GRASS
#               for details.
#
#############################################################################

    The copyright protects your rights according to GNU General Public
    License (www.gnu.org).

3.  - deleted.
    We don't want the $ ID $ in scripts any more as it
    causes problems for the CVS branches.

4.  As a general principle, shell variables should almost always be quoted.
    Use only secure temp files, see g.tempfile and scripts/* for examples.

5.  If you search for a command in $PATH, do NOT
    use the "which" command or the "type -p" command. Both commands are not
    supported on all platforms, thus causing problems for some people. As an
    alternative, please use code similar to the following shell script snippet
    which will perform the same function. In this case, the path of the grass60
    command is saved if grass60 is found in $PATH. This won't recognize aliased
    command name.
    
	# Search for grass5 command in user's path
	for i in `echo $PATH | sed 's/^:/.:/
    	    	    		    s/::/:.:/g
				    s/:$/:./
				    s/:/ /g'`
	do
	    if [ -f $i/grass5 ] ; then
    		
		# Save the path of the grass60 command
		GRASS_PATH=$i/grass60
		# Use the first one in user's path
		break
	    fi
	done

6.  Use "GRASS_TCLSH" and "GRASS_WISH" environment variables instead of
    "tclsh" and "wish" at the start of Tcl/Tk scripts. This allows users to
    override the default names, so that developers don't need worry about the
    shell names.

    Tcl script:

    	#!/bin/sh
	# the next line restarts using tclsh \
	exec $GRASS_TCLSH "$0" "$@"


    Tk script:

    	#!/bin/sh
	# the next line restarts using wish \
	exec $GRASS_WISH "$0" "$@"

7.  For consistency, use README rather than README.txt for any README files.

8.  Be sure to develop on top of the LATEST GRASS code (which is in CVS).
    You can re-check before submission with 'cvs diff':

    Be sure to create unified ("diff -u") format. "Plain"
    diffs (the default format) are risky, because they will apply without
    warning to code which has been substantially changed; they are also
    harder to read than unified.

    Such diffs should be made from the top-level directory, e.g.
    "cvs diff -u display/d.vect/main.c"; that way, the diff will
    include the pathname rather than just "main.c".

9.  Tell the other developers about the new code using the following e-mail:
    grass5@grass.itc.it
 
    To subscribe to this mailing list, see
    http://grass.itc.it/devel/index.php

10. In case of questions feel free to contact the developers at the above
    mailing list.
    http://grass.itc.it/devel/index.php#submission

...
[please add further hints if required]
