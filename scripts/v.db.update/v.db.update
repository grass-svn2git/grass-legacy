#!/bin/sh
#
############################################################################
#
# MODULE:       v.db.update
# AUTHOR(S):   	Moritz Lennert 
# PURPOSE:      interface to db.execute to update a column in the attribute table connected to a given map
# COPYRIGHT:    (C) 2005 by the GRASS Development Team
#
#               This program is free software under the GNU General Public
#               License (>=v2). Read the file COPYING that comes with GRASS
#               for details.
#
#############################################################################


#%Module
#%  description: allows to assign a new value to a column in the attribute table connected to a given map
#%  keywords: vector, database, attribute table
#%End

#%option
#% key: map
#% type: string
#% gisprompt: old,vector,vector
#% description: vector map for which to edit attribute table
#% required : yes
#%end

#%option
#% key: layer
#% type: integer
#% description: Layer where to add column
#% answer: 1
#% required : no
#%end

#%option
#% key: column
#% type: string
#% description: column to update
#% required : yes
#%end

#%option
#% key: value
#% type: string
#% description: new value to assign to the column (varchar values have to be in single quotes, ex: 'grass')
#% required : yes
#%end

#%option
#% key: where
#% type: string
#% description: condition for update (everything after the 'where' sql statement; ex: cat=1 or col1/col2>1) 
#% required : no
#%end

if  [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program."
 exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
    exec g.parser "$0" "$@"
fi

PROG=`basename $0`

#### check if we have awk
if [ ! -x "`which awk`" ] ; then
    echo "$PROG: awk required, please install awk or gawk first" 2>&1
    exit 1
fi

# setting environment, so that awk works properly in all languages
unset LC_ALL
export LC_NUMERIC=C

table=`v.db.connect $GIS_OPT_MAP -g | grep -w $GIS_OPT_LAYER | awk '{print $2}'`
database=`v.db.connect $GIS_OPT_MAP -g | grep -w $GIS_OPT_LAYER | awk '{print $4}'`
driver=`v.db.connect $GIS_OPT_MAP -g | grep -w $GIS_OPT_LAYER | awk '{print $5}'`

if [ -z $table ] ; then
   echo -e "\nThere is no table connected to this map !\nRun v.db.connect first.\n"
   exit 1
fi


if [ -n "$GIS_OPT_WHERE" ]
  then
	echo "UPDATE $table SET $GIS_OPT_COLUMN=$GIS_OPT_VALUE where $GIS_OPT_WHERE" | db.execute database=$database driver=$driver
  else
	echo "UPDATE $table SET $GIS_OPT_COLUMN=$GIS_OPT_VALUE" | db.execute database=$database driver=$driver
fi
