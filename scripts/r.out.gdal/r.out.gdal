#!/bin/sh 

############################################################################
#
# MODULE:	r.out.gdal
# AUTHOR(S):	Markus Neteler. neteler itc.it
# PURPOSE:	r.out.gdal script hack until a C version is written
# COPYRIGHT:	(C) 2003,2005 by the GRASS Development Team
#
#		This program is free software under the GNU General Public
#		License (>=v2). Read the file COPYING that comes with GRASS
#		for details.
# REQUIRES:     - GDAL compiled with GRASS support (libgrass)
#                   http://gdal.velocet.ca/projects/grass/
#               - or GRASS CVS/libgrass/
#               - or new GDAL/GRASS plugin
#############################################################################

#%Module
#% description: Exports GRASS raster data into various formats (requires GDAL)
#%End
#%flag
#%  key: l
#%  description: list supported output formats
#%END
#%option
#% key: input
#% type: string
#% gisprompt: old,cell,raster
#% description: Name of input raster map
#% required : no
#%END
#%option
#% key: format
#% type: string
#% description: GIS format to write (case sensitive, see also -l flag)
#% options: AAIGrid,BMP,BSB,DTED,ELAS,ENVI,FIT,GIF,GTiff,HFA,JPEG,MEM,MFF,MFF2,NITF,PAux,PNG,PNM,VRT,XPM
#% answer: GTiff
#% required : no
#%END
#%option
#% key: type
#% type: string
#% description: file type
#% options: Byte,Int16,UInt16,UInt32,Int32,Float32,Float64,CInt16,CInt32,CFloat32,CFloat64
#% required : no
#%END
#%option
#% key: output
#% type: string
#% description: Name of output file
#% required : no
#%END
#%option
#% key: createopt
#% type: string
#% description: creation option to the output format driver. Multiple options may be listed
#% required : no
#%END
#%option
#% key: metaopt
#% type: string
#% description: metadata key passed on the output dataset if possible
#% required : no
#%END


if [ "$1" != "@ARGS_PARSED@" ] ; then
  exec g.parser "$0" "$@"
fi

gdal-config --formats 2>&1 > /dev/null
if [ $? -ne 0 ] ; then
   echo "ERROR: GDAL not installed (gdal-config not found)"
   exit 1
fi

### 2005: test doesn't work with GRASS plugin
#
##check if GRASS is supported by gdal_translate for reading
#GDAL_INPUT_FORMATS=`gdal-config --formats`
#echo $GDAL_INPUT_FORMATS | grep grass 2>&1 > /dev/null
#if [ $? -ne 0 ] ; then
#   echo "ERROR: GDAL installation does not support GRASS."
#   echo "       Recompile GDAL libraries to use r.out.gdal."
#   exit 1
#fi

INPUT="$GIS_OPT_input"
FORMAT="$GIS_OPT_format"
TYPE="$GIS_OPT_type"
OUTPUT="$GIS_OPT_output"
CREATEKEY="-co $GIS_OPT_createopt"
METAKEY="-mo $GIS_OPT_metaopt"

if [ $GIS_FLAG_l -eq 1 ] ; then
  gdal_translate | grep ':' | grep -v 'Usage' | grep -v 'The following'
  exit 0
fi

#DEBUG:
#echo $INPUT $FORMAT $OUTPUT
#echo $GDAL_INPUT_FORMATS

#fetch the input raster map
eval `g.findfile element=cell file=$INPUT` 
if [ ! "$file" ] ; then
  echo "Input map not found"
  exit 1
fi

if [ -z "$FORMAT" ] ; then
  echo "ERROR: output format not specified"
  exit 1
fi

#set output if required
if [ -z "$OUTPUT" ] ; then
  OUTPUT=$INPUT
fi

if [ -z "$TYPE" ] ; then
  echo "ERROR: output TYPE not specified"
  echo "(Raster map type is `r.info -t $INPUT | cut -d'=' -f2`)"
  exit 1
fi

if [ "$CREATEKEY" = "-co " ] ; then
  unset CREATEKEY
fi
if [ "$METAKEY"   = "-mo " ] ; then
  unset METAKEY
fi

#do it
CELLHD=`echo $file | sed 's+/cell/+/cellhd/+g'`
echo "Writing format: $FORMAT"
echo "Writing type:   $TYPE"
gdal_translate -of $FORMAT -ot $TYPE -a_srs "`g.proj -wf`" $CREATEKEY $METAKEY $CELLHD $OUTPUT 
