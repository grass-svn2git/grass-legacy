#!/bin/sh
#
#
############################################################################
#
# MODULE:		d.out.tiff (adapted from cell.out.tiff by Reinhard Brunzema)
# AUTHOR(S):	Michael Barton; 
#              Routine to read current display geometry by Hamish & Glynn Clements
# PURPOSE:	To redraw current displayed maps to 8 bit TIFF output
# COPYRIGHT:	(C) 2004 by the GRASS Development Team
#
#		This program is free software under the GNU General Public
#		License (>=v2). Read the file COPYING that comes with GRASS
#		for details.
#
#############################################################################


STIME=1 	# Sleep time. Gives you the time to view what the script is
						# plotting and to have an eye on messages from the used 
						# modules. If you don't need that and if you are interested
						# in faster plotting set STIME=0
CELLSLEEP=2	# After plotting large maps, GRASS needs a little time 
						# to close the D_cell file. On really HUGE maps or slow 
						# machines you might want to raise this value.

if  [ -z $GISBASE ] ; then
 echo "You must be in GRASS GIS to run this program."
 exit 1
fi   

if [ "$1" = "-help" -o "$1" = "help" -o "$1" = "-h" ]
then
	echo
	echo "Usage: d.out.tiff output=file_name res=1|[2]|4 compression=[none]|packbit|deflate"
	echo
	echo "Uses CELL driver to save selected display monitor to file_name.tif"
	echo "in user's home directory at current resolution (res=1),"
	echo "double resolution (res=2), or quadruple resolution (res=4)"
	echo "with compression options."
	echo
	exit 1
fi

#defaults
compression="none"
res=2

# Check the current status of the monitor
monitorcheck=`d.mon -p|sed s/'No monitor currently selected for output'//`

if  [ "$monitorcheck" = "" ]
then
	echo ""
	echo "***You must select a display monitor***"
	echo ""
	exit 1
fi

# Save old settings
# Save old settings
old_GRASSW=`eval g.gisenv get=GRASS_WIDTH`
old_GRASSH=`eval g.gisenv get=GRASS_HEIGHT`
#old_TRUECOLOR=`eval g.gisenv get=GRASS_TRUECOLOR` #use if CELL driver gets 24 bit color
curr_mon=`d.mon -p | awk '{printf "%s", $4}'`
regionname=before_d_tiff
g.region save="$regionname"
currmapset=`g.gisenv MAPSET`

# evaluate command arguments
for i do
	case $i in
		output=*)
			output=`echo $i | sed s/output=//` ;;
		res=*)
			res=`echo $i | sed s/res=//` ;;
		compression=*)
			compression=`echo $i | sed s/compression=//` ;;
		*)
			echo ""
			echo "Unrecognized option: $i"
			echo "Options: output=file_name res=1|[2]|4 compression=[none]|packbit|deflate"
			exit
	esac
done

echo
echo "Saving current region settings as 'before_d_tiff.'"
echo "Use 'g.region region=before_d_tiff', if the"
echo "program aborts abnormally to return to your old region"
echo "settings."
echo

#get GRASS version for display monitor name
GRASS_VER=`g.version | awk '{printf "%s", $1 " " $2}'`

#capture current display monitor geometry
curr_width=`d.frame -D | sed -n -e '1,/^FRAME: full_screen/d' -e 's/d_win://p' | awk '{printf $4}'`
curr_height=`d.frame -D | sed -n -e '1,/^FRAME: full_screen/d' -e 's/d_win://p' | awk '{printf $2}'`

#set resolution for TIFF output
out_width=`expr $res \* $curr_width`
out_height=`expr $res \* $curr_height`

#set window geometry for TIFF output
unset GRASS_WIDTH
unset GRASS_HEIGHT
export GRASS_WIDTH=$out_width
export GRASS_HEIGHT=$out_height

#make sure that output is 24 bit color
#export GRASS_TRUECOLOR=TRUE #use if CELL driver gets 24 bit color

echo "Saving display to $output.tif from [$GRASS_VER- Monitor: $curr_mon]"
echo "at $out_width x $out_height resolution"

sleep 1s

# Clean CELL
g.remove rast=D_cell > /dev/null
sleep "$STIME"s

#storing active display settings to command set
dsave=`d.save -a`

# Write to D_Cell
echo "Starting cell driver..."
d.mon start=CELL 
d.mon select=CELL

sleep "$STIME"s

STIME=0

#clear cell driver display
d.erase color=white

#send active display settings to D_Cell
eval "$dsave"

# Stop cell driver and complete writing to D_Cell
d.mon stop=CELL

sleep "$CELLSLEEP"s	# Wait for D_cell closing.

# Export as tiff. Uses -p switch for 8 bit output because CELL driver is only 8 bit
echo "Changing to xy-projection."
g.region raster=D_cell@$currmapset

echo "Exporting map.tif (8 bit color)..."
r.out.tiff -p input=D_cell@$currmapset output=$output compression=$compression
sleep 1s

#Returning to old settings

g.region region="$regionname"
d.mon select="$curr_mon"

export GRASS_WIDTH=$old_GRASSW
export GRASS_HEIGHT=$old_GRASSH

echo "Done"
exit 0
