#!/bin/sh
# written by Markus Neteler 18. August 1998 / 20. Jan. 1256
#            neteler@geog.uni-hannover.de
# mosaic code from Felix Gershunov (Felix@spsl.nsc.ru)
#
# TODO: - implement g.findfile for 3 and 4 maps (currently only current mapset supported)
#            [done for 2 maps]
#       - fix isnull() in r.mapcalc for 3 and 4 maps composites
#            [done for 2 maps]
#       - fix color table length (currently only 256 cols supported, make
#         flexible)
#            [done for 2 maps]
#--------------------------------------------------

if test "$GISBASE" = ""; then
 echo "You must be in GRASS GIS to run this program." >&2
 exit 1
fi   
     
eval `g.gisenv`
: ${GISBASE?} ${GISDBASE?} ${LOCATION_NAME?} ${MAPSET?}
CURRLOCATION=$GISDBASE/$LOCATION_NAME/$MAPSET

if [ "$#" -lt 2  -o "$1" = "-help" -o "$1" = "help" ]; then
      echo ""
      echo "GRASS script to mosaic (aerial) images. A new image will"
      echo "be created with extended colormap."
      echo ""
      echo "Please specify image file(s)!"
      echo "Usage:"
      echo "   i.image.mosaic image1 image2 [image3] [image4]"
      echo ""
      echo "The first image will be on top of image stack."
      echo "The output file name contains all file names and .mosaic extension"
      exit
fi


if [ "$#" -gt 4 ]; then
     echo ""
     echo "Sorry, only mosaicing of four images supported."
     echo "   (You may extend the script yourself.)"
     exit
fi

echo ""
echo "ATTENTION: Do not forget to set region properly to cover all images!"
echo ""

# two images to patch
if [ "$#" -eq 2 ]; then
     echo "Mosaicing two images..."
     r.mapcalc "$1.$2.mosaic = if(isnull($1),\
					$2+256,\
					$1)"
     #modify the color table:
     echo '% 0 1024' > $CURRLOCATION/colr/$1.$2.mosaic

     eval `g.findfile element=cell file=$1`
     mapset1="${mapset}"
     cat $GISDBASE/$LOCATION_NAME/$mapset1/colr/$1 | grep -v '%' | tr -s ' ' '\012' >> $CURRLOCATION/colr/$1.$2.mosaic

     eval `g.findfile element=cell file=$2`
     mapset2="${mapset}"
     cat $GISDBASE/$LOCATION_NAME/$mapset2/colr/$2 | grep -v '%' | tr -s ' ' '\012' | awk -F':' '{print $1+256":"$2":"$3":"$4}'>>$CURRLOCATION/colr/$1.$2.mosaic
     
     echo "Ready. File $1.$2.mosaic created."
     exit
fi

# three images to patch
if [ "$#" -eq 3 ]; then
     echo "Mosaicing three images..."
     r.mapcalc "$1.$2.$3.mosaic = eval(t1=if($1,$1,$2+256), t2=if(t1 % 256,t1,$3+512), t2)"
     #modify the color table:
     echo '% 0 1024' > $CURRLOCATION/colr/$1.$2.$3.mosaic
     tail -256 $CURRLOCATION/colr/$1 >> $CURRLOCATION/colr/$1.$2.$3.mosaic
     tail -256 $CURRLOCATION/colr/$2 |awk -F':' '{print $1+256":"$2":"$3":"$4}'>>$CURRLOCATION/colr/$1.$2.$3.mosaic
     tail -256 $CURRLOCATION/colr/$3 |awk -F':' '{print $1+512":"$2":"$3":"$4}'>>$CURRLOCATION/colr/$1.$2.$3.mosaic
     echo "Ready. File $1.$2.$3.mosaic created."
     exit
fi

# four images to patch
if [ "$#" -eq 4 ]; then
     echo "Mosaicing four images..."
     r.mapcalc "$1.$2.$3.$4.mosaic = eval(t1=if($1,$1,$2+256), t2=if(t1 % 256,t1,$3+512), t3=if(t2 % 256,t2,$4+768),t3)"
     #modify the color table:
     echo '% 0 1024' > $CURRLOCATION/colr/$1.$2.$3.$4.mosaic
     tail -256 $CURRLOCATION/colr/$1 >> $CURRLOCATION/colr/$1.$2.$3.$4.mosaic
     tail -256 $CURRLOCATION/colr/$2 |awk -F':' '{print $1+256":"$2":"$3":"$4}'>>$CURRLOCATION/colr/$1.$2.$3.$4.mosaic
     tail -256 $CURRLOCATION/colr/$3 |awk -F':' '{print $1+512":"$2":"$3":"$4}'>>$CURRLOCATION/colr/$1.$2.$3.$4.mosaic
     tail -256 $CURRLOCATION/colr/$4 |awk -F':' '{print $1+768":"$2":"$3":"$4}'>>$CURRLOCATION/colr/$1.$2.$3.$4.mosaic
     echo "Ready. File $1.$2.$3.$4.mosaic created."
     exit
fi
