#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# generated by wxGlade 0.4.1cvs on Sun Mar 18 12:25:43 2007 from /Users/cmbarton/workspace/wxgrass/Gism/optpanels/raster-layer-properties.wxg

import wx

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.notebook_1 = wx.Notebook(self, -1, style=0)
        self.notebook_1_pane_3 = wx.Panel(self.notebook_1, -1)
        self.notebook_1_pane_2 = wx.Panel(self.notebook_1, -1)
        self.namelabel = wx.StaticText(self, -1, _("Map name"))
        self.mapselect = wx.ComboBox(self, -1, choices=[_("put"), _("ComboCtrl"), _("here to"), _("select"), _("maps")], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.notebook_1_pane_1 = wx.ScrolledWindow(self.notebook_1, -1, style=wx.TAB_TRAVERSAL)
        self.list_ctrl_1 = wx.ListCtrl(self.notebook_1_pane_2, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.bitmap_button_1 = wx.BitmapButton(self.notebook_1_pane_2, -1, wx.NullBitmap)
        self.label_3 = wx.StaticText(self.notebook_1_pane_3, -1, _("Data source:"))
        self.text_ctrl_1 = wx.TextCtrl(self.notebook_1_pane_3, -1, "", style=wx.TE_MULTILINE|wx.HSCROLL|wx.TE_RICH)
        self.label_4 = wx.StaticText(self.notebook_1_pane_3, -1, _("Data description:"))
        self.text_ctrl_2 = wx.TextCtrl(self.notebook_1_pane_3, -1, "", style=wx.TE_MULTILINE|wx.TE_RICH)
        self.label_5 = wx.StaticText(self.notebook_1_pane_3, -1, _("Comments:"))
        self.list_ctrl_2 = wx.ListCtrl(self.notebook_1_pane_3, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.cancel_button = wx.Button(self, -1, _("Cancel"))
        self.apply_button = wx.Button(self, -1, _("Apply"))
        self.ok_button = wx.Button(self, -1, _("OK"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TEXT, self.onTextChange, self.mapselect)
        self.Bind(wx.EVT_BUTTON, self.onCancel, self.cancel_button)
        self.Bind(wx.EVT_BUTTON, self.onApply, self.apply_button)
        self.Bind(wx.EVT_BUTTON, self.onOK, self.ok_button)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(_("Raster layer properties"))
        self.namelabel.SetForegroundColour(wx.Colour(0, 0, 255))
        self.mapselect.SetMinSize((250, -1))
        self.mapselect.SetToolTipString(_("Select raster map to display"))
        self.mapselect.SetSelection(-1)
        self.notebook_1_pane_1.SetScrollRate(10, 10)
        self.bitmap_button_1.SetMinSize((50, 400))
        self.text_ctrl_1.SetMinSize((400, 100))
        self.text_ctrl_2.SetMinSize((400, 100))
        self.list_ctrl_2.SetMinSize((400, 300))
        self.ok_button.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.GridSizer(1, 2, 0, 0)
        sizer_4.Add(self.namelabel, 0, wx.LEFT|wx.RIGHT|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_4.Add(self.mapselect, 0, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_1.Add(sizer_4, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(self.list_ctrl_1, 0, wx.ALL|wx.EXPAND, 5)
        sizer_2.Add(self.bitmap_button_1, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        self.notebook_1_pane_2.SetSizer(sizer_2)
        sizer_3.Add(self.label_3, 0, 0, 0)
        sizer_3.Add(self.text_ctrl_1, 0, wx.EXPAND, 0)
        sizer_3.Add(self.label_4, 0, 0, 0)
        sizer_3.Add(self.text_ctrl_2, 0, wx.EXPAND, 0)
        sizer_3.Add(self.label_5, 0, 0, 0)
        sizer_3.Add(self.list_ctrl_2, 1, wx.EXPAND, 0)
        self.notebook_1_pane_3.SetSizer(sizer_3)
        self.notebook_1.AddPage(self.notebook_1_pane_1, _("General"))
        self.notebook_1.AddPage(self.notebook_1_pane_2, _("Color rules"))
        self.notebook_1.AddPage(self.notebook_1_pane_3, _("Metadata"))
        sizer_1.Add(self.notebook_1, 1, wx.EXPAND, 0)
        sizer_5.Add(self.cancel_button, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_5.Add(self.apply_button, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_5.Add(self.ok_button, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_1.Add(sizer_5, 0, wx.ALL|wx.EXPAND|wx.ALIGN_BOTTOM|wx.ALIGN_CENTER_HORIZONTAL, 10)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def onTextChange(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `onTextChange' not implemented!"
        event.Skip()

    def onCancel(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `onCancel' not implemented!"
        event.Skip()

    def onApply(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `onApply' not implemented!"
        event.Skip()

    def onOK(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `onOK' not implemented!"
        event.Skip()

# end of class MyFrame


if __name__ == "__main__":
    import gettext
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
