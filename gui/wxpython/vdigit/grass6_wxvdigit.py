# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.33
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _grass6_wxvdigit
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


class PySwigIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PySwigIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PySwigIterator, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _grass6_wxvdigit.delete_PySwigIterator
    __del__ = lambda self : None;
    def value(*args): return _grass6_wxvdigit.PySwigIterator_value(*args)
    def incr(*args): return _grass6_wxvdigit.PySwigIterator_incr(*args)
    def decr(*args): return _grass6_wxvdigit.PySwigIterator_decr(*args)
    def distance(*args): return _grass6_wxvdigit.PySwigIterator_distance(*args)
    def equal(*args): return _grass6_wxvdigit.PySwigIterator_equal(*args)
    def copy(*args): return _grass6_wxvdigit.PySwigIterator_copy(*args)
    def next(*args): return _grass6_wxvdigit.PySwigIterator_next(*args)
    def previous(*args): return _grass6_wxvdigit.PySwigIterator_previous(*args)
    def advance(*args): return _grass6_wxvdigit.PySwigIterator_advance(*args)
    def __eq__(*args): return _grass6_wxvdigit.PySwigIterator___eq__(*args)
    def __ne__(*args): return _grass6_wxvdigit.PySwigIterator___ne__(*args)
    def __iadd__(*args): return _grass6_wxvdigit.PySwigIterator___iadd__(*args)
    def __isub__(*args): return _grass6_wxvdigit.PySwigIterator___isub__(*args)
    def __add__(*args): return _grass6_wxvdigit.PySwigIterator___add__(*args)
    def __sub__(*args): return _grass6_wxvdigit.PySwigIterator___sub__(*args)
    def __iter__(self): return self
PySwigIterator_swigregister = _grass6_wxvdigit.PySwigIterator_swigregister
PySwigIterator_swigregister(PySwigIterator)

class IntVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IntVector, name)
    __repr__ = _swig_repr
    def iterator(*args): return _grass6_wxvdigit.IntVector_iterator(*args)
    def __iter__(self): return self.iterator()
    def __nonzero__(*args): return _grass6_wxvdigit.IntVector___nonzero__(*args)
    def __len__(*args): return _grass6_wxvdigit.IntVector___len__(*args)
    def pop(*args): return _grass6_wxvdigit.IntVector_pop(*args)
    def __getslice__(*args): return _grass6_wxvdigit.IntVector___getslice__(*args)
    def __setslice__(*args): return _grass6_wxvdigit.IntVector___setslice__(*args)
    def __delslice__(*args): return _grass6_wxvdigit.IntVector___delslice__(*args)
    def __delitem__(*args): return _grass6_wxvdigit.IntVector___delitem__(*args)
    def __getitem__(*args): return _grass6_wxvdigit.IntVector___getitem__(*args)
    def __setitem__(*args): return _grass6_wxvdigit.IntVector___setitem__(*args)
    def append(*args): return _grass6_wxvdigit.IntVector_append(*args)
    def empty(*args): return _grass6_wxvdigit.IntVector_empty(*args)
    def size(*args): return _grass6_wxvdigit.IntVector_size(*args)
    def clear(*args): return _grass6_wxvdigit.IntVector_clear(*args)
    def swap(*args): return _grass6_wxvdigit.IntVector_swap(*args)
    def get_allocator(*args): return _grass6_wxvdigit.IntVector_get_allocator(*args)
    def begin(*args): return _grass6_wxvdigit.IntVector_begin(*args)
    def end(*args): return _grass6_wxvdigit.IntVector_end(*args)
    def rbegin(*args): return _grass6_wxvdigit.IntVector_rbegin(*args)
    def rend(*args): return _grass6_wxvdigit.IntVector_rend(*args)
    def pop_back(*args): return _grass6_wxvdigit.IntVector_pop_back(*args)
    def erase(*args): return _grass6_wxvdigit.IntVector_erase(*args)
    def __init__(self, *args): 
        this = _grass6_wxvdigit.new_IntVector(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(*args): return _grass6_wxvdigit.IntVector_push_back(*args)
    def front(*args): return _grass6_wxvdigit.IntVector_front(*args)
    def back(*args): return _grass6_wxvdigit.IntVector_back(*args)
    def assign(*args): return _grass6_wxvdigit.IntVector_assign(*args)
    def resize(*args): return _grass6_wxvdigit.IntVector_resize(*args)
    def insert(*args): return _grass6_wxvdigit.IntVector_insert(*args)
    def reserve(*args): return _grass6_wxvdigit.IntVector_reserve(*args)
    def capacity(*args): return _grass6_wxvdigit.IntVector_capacity(*args)
    __swig_destroy__ = _grass6_wxvdigit.delete_IntVector
    __del__ = lambda self : None;
IntVector_swigregister = _grass6_wxvdigit.IntVector_swigregister
IntVector_swigregister(IntVector)

class DoubleVector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DoubleVector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DoubleVector, name)
    __repr__ = _swig_repr
    def iterator(*args): return _grass6_wxvdigit.DoubleVector_iterator(*args)
    def __iter__(self): return self.iterator()
    def __nonzero__(*args): return _grass6_wxvdigit.DoubleVector___nonzero__(*args)
    def __len__(*args): return _grass6_wxvdigit.DoubleVector___len__(*args)
    def pop(*args): return _grass6_wxvdigit.DoubleVector_pop(*args)
    def __getslice__(*args): return _grass6_wxvdigit.DoubleVector___getslice__(*args)
    def __setslice__(*args): return _grass6_wxvdigit.DoubleVector___setslice__(*args)
    def __delslice__(*args): return _grass6_wxvdigit.DoubleVector___delslice__(*args)
    def __delitem__(*args): return _grass6_wxvdigit.DoubleVector___delitem__(*args)
    def __getitem__(*args): return _grass6_wxvdigit.DoubleVector___getitem__(*args)
    def __setitem__(*args): return _grass6_wxvdigit.DoubleVector___setitem__(*args)
    def append(*args): return _grass6_wxvdigit.DoubleVector_append(*args)
    def empty(*args): return _grass6_wxvdigit.DoubleVector_empty(*args)
    def size(*args): return _grass6_wxvdigit.DoubleVector_size(*args)
    def clear(*args): return _grass6_wxvdigit.DoubleVector_clear(*args)
    def swap(*args): return _grass6_wxvdigit.DoubleVector_swap(*args)
    def get_allocator(*args): return _grass6_wxvdigit.DoubleVector_get_allocator(*args)
    def begin(*args): return _grass6_wxvdigit.DoubleVector_begin(*args)
    def end(*args): return _grass6_wxvdigit.DoubleVector_end(*args)
    def rbegin(*args): return _grass6_wxvdigit.DoubleVector_rbegin(*args)
    def rend(*args): return _grass6_wxvdigit.DoubleVector_rend(*args)
    def pop_back(*args): return _grass6_wxvdigit.DoubleVector_pop_back(*args)
    def erase(*args): return _grass6_wxvdigit.DoubleVector_erase(*args)
    def __init__(self, *args): 
        this = _grass6_wxvdigit.new_DoubleVector(*args)
        try: self.this.append(this)
        except: self.this = this
    def push_back(*args): return _grass6_wxvdigit.DoubleVector_push_back(*args)
    def front(*args): return _grass6_wxvdigit.DoubleVector_front(*args)
    def back(*args): return _grass6_wxvdigit.DoubleVector_back(*args)
    def assign(*args): return _grass6_wxvdigit.DoubleVector_assign(*args)
    def resize(*args): return _grass6_wxvdigit.DoubleVector_resize(*args)
    def insert(*args): return _grass6_wxvdigit.DoubleVector_insert(*args)
    def reserve(*args): return _grass6_wxvdigit.DoubleVector_reserve(*args)
    def capacity(*args): return _grass6_wxvdigit.DoubleVector_capacity(*args)
    __swig_destroy__ = _grass6_wxvdigit.delete_DoubleVector
    __del__ = lambda self : None;
DoubleVector_swigregister = _grass6_wxvdigit.DoubleVector_swigregister
DoubleVector_swigregister(DoubleVector)

class IntVecIntMap(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntVecIntMap, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IntVecIntMap, name)
    __repr__ = _swig_repr
    def iterator(*args): return _grass6_wxvdigit.IntVecIntMap_iterator(*args)
    def __iter__(self): return self.iterator()
    def __nonzero__(*args): return _grass6_wxvdigit.IntVecIntMap___nonzero__(*args)
    def __len__(*args): return _grass6_wxvdigit.IntVecIntMap___len__(*args)
    def __getitem__(*args): return _grass6_wxvdigit.IntVecIntMap___getitem__(*args)
    def __delitem__(*args): return _grass6_wxvdigit.IntVecIntMap___delitem__(*args)
    def has_key(*args): return _grass6_wxvdigit.IntVecIntMap_has_key(*args)
    def keys(*args): return _grass6_wxvdigit.IntVecIntMap_keys(*args)
    def values(*args): return _grass6_wxvdigit.IntVecIntMap_values(*args)
    def items(*args): return _grass6_wxvdigit.IntVecIntMap_items(*args)
    def __contains__(*args): return _grass6_wxvdigit.IntVecIntMap___contains__(*args)
    def key_iterator(*args): return _grass6_wxvdigit.IntVecIntMap_key_iterator(*args)
    def value_iterator(*args): return _grass6_wxvdigit.IntVecIntMap_value_iterator(*args)
    def __iter__(self): return self.key_iterator()
    def iterkeys(self): return self.key_iterator()
    def itervalues(self): return self.value_iterator()
    def iteritems(self): return self.iterator()
    def __setitem__(*args): return _grass6_wxvdigit.IntVecIntMap___setitem__(*args)
    def __init__(self, *args): 
        this = _grass6_wxvdigit.new_IntVecIntMap(*args)
        try: self.this.append(this)
        except: self.this = this
    def empty(*args): return _grass6_wxvdigit.IntVecIntMap_empty(*args)
    def size(*args): return _grass6_wxvdigit.IntVecIntMap_size(*args)
    def clear(*args): return _grass6_wxvdigit.IntVecIntMap_clear(*args)
    def swap(*args): return _grass6_wxvdigit.IntVecIntMap_swap(*args)
    def get_allocator(*args): return _grass6_wxvdigit.IntVecIntMap_get_allocator(*args)
    def begin(*args): return _grass6_wxvdigit.IntVecIntMap_begin(*args)
    def end(*args): return _grass6_wxvdigit.IntVecIntMap_end(*args)
    def rbegin(*args): return _grass6_wxvdigit.IntVecIntMap_rbegin(*args)
    def rend(*args): return _grass6_wxvdigit.IntVecIntMap_rend(*args)
    def count(*args): return _grass6_wxvdigit.IntVecIntMap_count(*args)
    def erase(*args): return _grass6_wxvdigit.IntVecIntMap_erase(*args)
    def find(*args): return _grass6_wxvdigit.IntVecIntMap_find(*args)
    def lower_bound(*args): return _grass6_wxvdigit.IntVecIntMap_lower_bound(*args)
    def upper_bound(*args): return _grass6_wxvdigit.IntVecIntMap_upper_bound(*args)
    __swig_destroy__ = _grass6_wxvdigit.delete_IntVecIntMap
    __del__ = lambda self : None;
IntVecIntMap_swigregister = _grass6_wxvdigit.IntVecIntMap_swigregister
IntVecIntMap_swigregister(IntVecIntMap)

class DisplayDriver(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DisplayDriver, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DisplayDriver, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _grass6_wxvdigit.new_DisplayDriver(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _grass6_wxvdigit.delete_DisplayDriver
    __del__ = lambda self : None;
    def DrawMap(*args): return _grass6_wxvdigit.DisplayDriver_DrawMap(*args)
    def SelectLinesByBox(*args): return _grass6_wxvdigit.DisplayDriver_SelectLinesByBox(*args)
    def SelectLineByPoint(*args): return _grass6_wxvdigit.DisplayDriver_SelectLineByPoint(*args)
    def GetSelected(*args): return _grass6_wxvdigit.DisplayDriver_GetSelected(*args)
    def SetSelected(*args): return _grass6_wxvdigit.DisplayDriver_SetSelected(*args)
    def GetSelectedVertex(*args): return _grass6_wxvdigit.DisplayDriver_GetSelectedVertex(*args)
    def CloseMap(*args): return _grass6_wxvdigit.DisplayDriver_CloseMap(*args)
    def OpenMap(*args): return _grass6_wxvdigit.DisplayDriver_OpenMap(*args)
    def ReloadMap(*args): return _grass6_wxvdigit.DisplayDriver_ReloadMap(*args)
    def SetDevice(*args): return _grass6_wxvdigit.DisplayDriver_SetDevice(*args)
    def GetMapBoundingBox(*args): return _grass6_wxvdigit.DisplayDriver_GetMapBoundingBox(*args)
    def SetRegion(*args): return _grass6_wxvdigit.DisplayDriver_SetRegion(*args)
    def UpdateSettings(*args): return _grass6_wxvdigit.DisplayDriver_UpdateSettings(*args)
DisplayDriver_swigregister = _grass6_wxvdigit.DisplayDriver_swigregister
DisplayDriver_swigregister(DisplayDriver)

print_error = _grass6_wxvdigit.print_error
GSQL_MAX = _grass6_wxvdigit.GSQL_MAX
class Digit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Digit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Digit, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _grass6_wxvdigit.new_Digit(*args)
        try: self.this.append(this)
        except: self.this = this
    def InitCats(*args): return _grass6_wxvdigit.Digit_InitCats(*args)
    def AddLine(*args): return _grass6_wxvdigit.Digit_AddLine(*args)
    def RewriteLine(*args): return _grass6_wxvdigit.Digit_RewriteLine(*args)
    def SplitLine(*args): return _grass6_wxvdigit.Digit_SplitLine(*args)
    def DeleteLines(*args): return _grass6_wxvdigit.Digit_DeleteLines(*args)
    def MoveLines(*args): return _grass6_wxvdigit.Digit_MoveLines(*args)
    def FlipLines(*args): return _grass6_wxvdigit.Digit_FlipLines(*args)
    def MergeLines(*args): return _grass6_wxvdigit.Digit_MergeLines(*args)
    def BreakLines(*args): return _grass6_wxvdigit.Digit_BreakLines(*args)
    def SnapLines(*args): return _grass6_wxvdigit.Digit_SnapLines(*args)
    def ConnectLines(*args): return _grass6_wxvdigit.Digit_ConnectLines(*args)
    def TypeConvLines(*args): return _grass6_wxvdigit.Digit_TypeConvLines(*args)
    def ZBulkLabeling(*args): return _grass6_wxvdigit.Digit_ZBulkLabeling(*args)
    def CopyLines(*args): return _grass6_wxvdigit.Digit_CopyLines(*args)
    def MoveVertex(*args): return _grass6_wxvdigit.Digit_MoveVertex(*args)
    def ModifyLineVertex(*args): return _grass6_wxvdigit.Digit_ModifyLineVertex(*args)
    def SelectLinesByQuery(*args): return _grass6_wxvdigit.Digit_SelectLinesByQuery(*args)
    def CopyCats(*args): return _grass6_wxvdigit.Digit_CopyCats(*args)
    def GetCategory(*args): return _grass6_wxvdigit.Digit_GetCategory(*args)
    def GetLineCats(*args): return _grass6_wxvdigit.Digit_GetLineCats(*args)
    def SetLineCats(*args): return _grass6_wxvdigit.Digit_SetLineCats(*args)
    def GetLayers(*args): return _grass6_wxvdigit.Digit_GetLayers(*args)
    __swig_destroy__ = _grass6_wxvdigit.delete_Digit
    __del__ = lambda self : None;
Digit_swigregister = _grass6_wxvdigit.Digit_swigregister
Digit_swigregister(Digit)

GV_POINT = _grass6_wxvdigit.GV_POINT
GV_LINE = _grass6_wxvdigit.GV_LINE
GV_BOUNDARY = _grass6_wxvdigit.GV_BOUNDARY
GV_CENTROID = _grass6_wxvdigit.GV_CENTROID
GV_FACE = _grass6_wxvdigit.GV_FACE
GV_KERNEL = _grass6_wxvdigit.GV_KERNEL
GV_AREA = _grass6_wxvdigit.GV_AREA
GV_VOLUME = _grass6_wxvdigit.GV_VOLUME
GV_POINTS = _grass6_wxvdigit.GV_POINTS
GV_LINES = _grass6_wxvdigit.GV_LINES
PORT_DOUBLE_MAX = _grass6_wxvdigit.PORT_DOUBLE_MAX
NO_SNAP = _grass6_wxvdigit.NO_SNAP
SNAP = _grass6_wxvdigit.SNAP
SNAPVERTEX = _grass6_wxvdigit.SNAPVERTEX
QUERY_UNKNOWN = _grass6_wxvdigit.QUERY_UNKNOWN
QUERY_LENGTH = _grass6_wxvdigit.QUERY_LENGTH
QUERY_DANGLE = _grass6_wxvdigit.QUERY_DANGLE


