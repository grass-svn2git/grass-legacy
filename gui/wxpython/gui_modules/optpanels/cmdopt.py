#!/usr/bin/env python
# -*- coding: US-ASCII -*-
# generated by wxGlade 0.4.1 on Mon Aug 21 22:12:31 2006

import wx

class MyPanel(wx.ScrolledWindow):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyPanel.__init__
        kwds["style"] = wx.TAB_TRAVERSAL|wx.CLIP_CHILDREN
        wx.ScrolledWindow.__init__(self, *args, **kwds)
        self.title = wx.StaticText(self, -1, _("Command Layer Options"))
        self.opacity = wx.SpinCtrl(self, -1, "100", min=0, max=100, style=wx.SP_ARROW_KEYS|wx.TE_AUTO_URL|wx.TE_RIGHT)
        self.opacity_label = wx.StaticText(self, -1, _("opacity"), style=wx.ALIGN_RIGHT)
        self.help_button = wx.BitmapButton(self, -1, wx.Bitmap("/Applications/Grass/GRASS.app/Contents/Resources/etc/gui/icons/gui-help.gif", wx.BITMAP_TYPE_ANY))
        self.static_line_1 = wx.StaticLine(self, -1)
        self.cmd_label = wx.StaticText(self, -1, _("Select display command"))
        self.dcmd = wx.TextCtrl(self, -1, _("self.dcmd"))
        self.arg_label = wx.StaticText(self, -1, _("command arguments"), style=wx.ALIGN_RIGHT)
        self.arguments = wx.TextCtrl(self, -1, _("self.dcmdarg"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_SPINCTRL, self.OnOpacity, self.opacity)
        self.Bind(wx.EVT_BUTTON, self.RastHelp, self.help_button)
        self.Bind(wx.EVT_TEXT_ENTER, self.SetBaseMap, self.dcmd)
        self.Bind(wx.EVT_TEXT, self.SetBaseMap, self.dcmd)
        self.Bind(wx.EVT_TEXT_ENTER, self.SetValues, self.arguments)
        self.Bind(wx.EVT_TEXT, self.SetValues, self.arguments)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyPanel.__set_properties
        self.SetSize((-1, -1))
        self.SetScrollRate(10, 10)
        self.title.SetFont(wx.Font(12, wx.MODERN, wx.SLANT, wx.BOLD, 0, ""))
        self.opacity.SetToolTipString(_("set layer opacity-transparency (0-100%)"))
        self.help_button.SetToolTipString(_("GRASS module documentation"))
        self.help_button.SetSize(self.help_button.GetBestSize())
        self.dcmd.SetMinSize((250, -1))
        self.dcmd.SetToolTipString(_("raster base map"))
        self.arguments.SetMinSize((250, -1))
        self.arguments.SetToolTipString(_("raster values to display in base map"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyPanel.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(2, 2, 3, 3)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(self.title, 1, wx.ALL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        sizer_2.Add(self.opacity, 0, wx.LEFT|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 20)
        sizer_2.Add(self.opacity_label, 0, wx.LEFT|wx.RIGHT|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        sizer_2.Add(self.help_button, 0, wx.LEFT|wx.RIGHT|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 10)
        sizer_1.Add(sizer_2, 0, wx.TOP|wx.EXPAND|wx.ADJUST_MINSIZE, 10)
        sizer_1.Add(self.static_line_1, 0, wx.TOP|wx.BOTTOM|wx.EXPAND, 5)
        grid_sizer_1.Add(self.cmd_label, 0, wx.RIGHT|wx.TOP|wx.BOTTOM|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        grid_sizer_1.Add(self.dcmd, 1, wx.RIGHT|wx.TOP|wx.BOTTOM|wx.EXPAND|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE|wx.FIXED_MINSIZE, 5)
        sizer_4.Add((20, 20), 0, wx.EXPAND|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        sizer_4.Add(self.arg_label, 0, wx.RIGHT|wx.TOP|wx.BOTTOM|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        grid_sizer_1.Add(sizer_4, 0, wx.EXPAND|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.arguments, 0, wx.RIGHT|wx.TOP|wx.BOTTOM|wx.EXPAND|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE|wx.FIXED_MINSIZE, 5)
        grid_sizer_1.AddGrowableCol(1)
        grid_sizer_1.AddGrowableCol(2)
        sizer_1.Add(grid_sizer_1, 0, wx.LEFT|wx.RIGHT|wx.BOTTOM|wx.EXPAND|wx.ALIGN_CENTER_VERTICAL, 5)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        # end wxGlade

    def OnOpacity(self, event): # wxGlade: MyPanel.<event_handler>
        print "Event handler `OnOpacity' not implemented!"
        event.Skip()

    def RastHelp(self, event): # wxGlade: MyPanel.<event_handler>
        print "Event handler `RastHelp' not implemented!"
        event.Skip()

    def SetBaseMap(self, event): # wxGlade: MyPanel.<event_handler>
        print "Event handler `SetBaseMap' not implemented!"
        event.Skip()

    def SetValues(self, event): # wxGlade: MyPanel.<event_handler>
        print "Event handler `SetValues' not implemented!"
        event.Skip()

# end of class MyPanel


